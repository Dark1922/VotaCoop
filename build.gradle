plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.3'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'scala'
	id "io.gatling.gradle" version "3.9.5"
}

group = 'com.br'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	jcenter()
}

test {
	useJUnitPlatform()
}


task dockerComposeUp(type: Exec) {
	commandLine 'docker-compose', 'up', '--build'
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'junit:junit:4.13.1'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.modelmapper:modelmapper:3.1.1'
	implementation 'io.gatling.highcharts:gatling-charts-highcharts:3.9.5'
	gatlingRuntimeOnly 'cglib:cglib-nodep:3.2.0'
	gatlingImplementation 'org.apache.commons:commons-lang3:3.4'
	gatling 'com.google.code.gson:gson:2.8.9'
	testImplementation 'org.mockito:mockito-core:5.1.1'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	testImplementation 'io.rest-assured:rest-assured:5.3.1'
	testImplementation 'com.h2database:h2:2.2.220'
	implementation 'org.flywaydb:flyway-core:9.21.2'
	implementation 'org.springdoc:springdoc-openapi-starter-common:2.2.0'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.5'

}
